{
	"id": "96daef6f-80d7-5488-996e-b30cecee2693",
	"name": "FHIR APIs",
	"description": "This parent collection contains all the requests of FHIR APIS.",
	"order": [],
	"folders": [
		{
			"id": "7bd21b65-43c0-cf17-e64b-c8c94155b27c",
			"name": "01 GenerateAccessToken-ClientCredOnly",
			"description": "",
			"order": [
				"2816e3a9-24aa-4b1b-2fea-9aacd0108835"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "a09541fd-3d21-aca8-063c-0c5c7ce5080e",
			"name": "AllergyIntollerance-FHIR-API",
			"description": "",
			"order": [
				"ee35ef4f-8e92-422c-98dc-8da92e7159d1",
				"971c97b6-fe07-d726-e26d-a90402422679",
				"4495d1f9-31aa-deb0-d313-a649cba6a992",
				"e8e028e8-071f-972a-6b64-f1f29e6ed34b",
				"97fb956c-5803-8497-f3ae-3a7f11d98fd6",
				"8609f2fe-fced-1b90-2aa1-8596510f9905",
				"feec0492-ecef-175a-8ed0-257e03cf6415",
				"f1d772c6-56f6-7a7f-38f0-d7273f943c24",
				"1c44d971-65df-17cb-178e-5e54c8a28864"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "63db44b1-7070-f6c0-c829-0ccf7278010c",
			"name": "BasePath-FHIR-API",
			"description": "",
			"order": [
				"27eed0d2-4e3d-f134-1504-a1c6e99d9df1",
				"39919740-6e92-ccd1-594c-6b12d0eae42b",
				"237ed2a8-df1c-6632-2d71-3bdd69851ebe",
				"b917bdb5-26c8-d074-a663-a723b173c749",
				"3be1f5b2-d21f-27f8-d928-843573361d16",
				"610b2ef6-3b1b-ccca-3552-83facf336235",
				"d5b9371f-bb02-2357-ad01-66231072bf64",
				"efdad849-691a-f956-da68-10467f482c1d",
				"5bc83490-d6c9-7f60-6cc8-7bb5a9378d2c"
			],
			"owner": "421038"
		},
		{
			"id": "2c6a9f02-1720-1ba1-e3a1-4d174a7a22e9",
			"name": "CarePlan-FHIR-API",
			"description": "",
			"order": [
				"c8658ecb-7a2e-029e-0464-15a00361a7f8",
				"cff3821c-171f-a779-c689-031ef0bc96c1",
				"6a8e5804-3a0b-754d-11a5-85a3309a6d08",
				"df83f372-1b49-a784-81a3-733a075e9bc1",
				"b8379922-2796-7304-b289-0c68c7ba8052",
				"d39d2cca-0e12-f035-2369-83cf972fefed",
				"79fc8563-ecce-0d84-1b81-a46e558ff220",
				"357e1ad1-1142-9962-c01d-6d29ea4942d3",
				"d0e4f2c0-a8f7-c191-f5e6-4663c413fd32"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "1d64bbd8-4e32-5820-a73d-a16d8087e3d0",
			"name": "Condition-FHIR-API",
			"description": "",
			"order": [
				"0558255d-c76a-8ef5-2329-57030a0961e6",
				"402f6c63-5da2-06b6-a981-b75fed5421b7",
				"ec117b74-9747-e906-7fba-06de1fb96043",
				"54c925df-e824-4c45-1e26-941492a9a6a9",
				"00aff3ac-8859-4759-0ca3-4f8cce4f6a87",
				"0a2552ed-3cb4-a48f-1c81-ee6536fad7cc",
				"b4476a5c-a7c9-a216-d120-5be74a4ed1fc",
				"7a53de24-b143-85d8-9fd8-5900a8531c51",
				"636a98b1-b4fc-30dc-c4d3-ebc05fc5d889"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "20601fa7-64ac-2b14-f5ef-d8d1659c838a",
			"name": "Coverage-FHIR-API",
			"description": "",
			"order": [
				"92d8d45b-4925-a6ef-6ce1-7472fc0a062b",
				"2250651b-e8a5-5239-458e-3e7edf2f1b5a",
				"040273aa-b30f-b94f-5a19-11d643009ed6",
				"034661bc-6183-7bea-d274-1ecd76dda8cb",
				"c14dbe5a-a233-3bd0-fa35-35c354ff9252",
				"92b90325-a8da-55ea-4300-0dbfd107bd35",
				"c49b966b-402e-77b5-014c-a27fdee18359",
				"0a1f28e3-a32a-6b86-9d73-59a49992ef91",
				"011ec6bf-a3a0-b2e5-1936-6989fae097b1"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "80593fdf-3c17-baed-9a90-830feee515ec",
			"name": "DiagnosticOrder-FHIR-API",
			"description": "",
			"order": [
				"23f58603-4e94-439a-0f33-ceb184211ed5",
				"735bcb68-0264-5fa5-006b-35e2c1b8480d",
				"1d12a15e-b8ad-fca7-285a-00fa58e65cbd",
				"1af58b11-bcd4-78e6-60fc-9ddec165dd3d",
				"d60fe587-8de9-cf78-9f82-0d1b4f79150e",
				"57f998a3-6af2-7d89-0777-c0e9d02a72c8",
				"5f11d13f-92c8-1c86-cb5c-3533631a39c4",
				"b6005bf2-f14c-25c1-efd4-dbfc69338b56",
				"b43c2544-3afe-065d-9224-58c834d92af2"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "50504b94-6911-259e-ba1b-f2eac4b524d9",
			"name": "DiagnosticReport-FHIR-API",
			"description": "",
			"order": [
				"efe5c23b-3731-978e-7945-b0bc7f81da0c",
				"488031b6-6bed-56ba-ad37-5894b231c205",
				"b6a7ae07-eae4-8c37-ae58-9d90a1accb08",
				"54e16783-699f-14b1-7bb9-5f4749771186",
				"0dc34437-488e-7118-c212-4f8008d77634",
				"f1eff018-b7c7-8c2c-03d2-40535d6dd8d4",
				"56617494-31d4-1c76-3fc1-8c5ecc81e0a6",
				"6ffd6a58-520f-e84f-7f44-668518d9a4ff",
				"d068c795-7cee-f6e5-7c2b-1e4df76919da"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "7ef15731-ee41-dad9-2238-2e0f3bde7224",
			"name": "DocumentReference-FHIR-API",
			"description": "",
			"order": [
				"ccf66a14-f31e-8dcd-68d8-a527a21d37c7",
				"0dbc5b17-4449-495e-043a-408b4eab86fd",
				"3835a0d5-1ea0-ca5f-4aef-df352c420373",
				"1878da0a-94d1-e779-2981-e0f55f6d096f",
				"32e7037d-0b6f-364d-47a2-d15732519c8c",
				"95f6ee34-57a8-3a2f-4045-14ec05dfe1bd",
				"aebbe331-9692-b382-0b26-8a875dd14180",
				"ae175f68-ee4c-45ef-e7bb-1c9cc6a7465d",
				"ceb9a34d-6c77-63d1-b5d8-94553401f29c"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "120b5027-ed36-1ab9-65ef-899f4b73871f",
			"name": "Encounter-FHIR-API",
			"description": "",
			"order": [
				"9397f1a0-e85e-99e4-ccca-8406d717ef48",
				"73e2668b-0d1f-b68c-dcab-a3b1467c5674",
				"6dff29b6-9c8a-9a57-184b-fc2a0720bd28",
				"0f890491-9699-22af-4af5-b2dce2965526",
				"d2dc91c3-d055-fa78-9916-7f76ae96ad54",
				"2275011c-6d24-a6fb-0959-62845b3ac254",
				"2b15931d-a785-3ba7-a62e-6dd323a0c27b",
				"081b6cec-650e-b1ea-d756-2d9886f54d4c",
				"4a9d7573-1448-0c0c-44e9-5a046441ed57",
				"a8bd8ab6-8d96-1b7e-0316-42abef6c0901"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "d479235a-05a6-a6b2-4101-7aeeda841743",
			"name": "Immunization-FHIR-API",
			"description": "",
			"order": [
				"5c9aa8f3-82d9-6d3e-706f-e115e8702b81",
				"477e2c55-b068-a542-6e8f-2bed5fc8e93d",
				"b3cc973b-d625-9a34-e51d-22e2f934e615",
				"59c054cd-a989-54be-9fc6-d644c5eb296c",
				"fc717e33-464c-c98a-c37a-a0152111f488",
				"098f57e1-bc3b-2141-5198-858181a9f8a7",
				"059b151f-0f04-2e05-ad77-d26c93e6a3e1",
				"6f2a8abb-5156-09ee-f9f6-7940feb54d02",
				"197086b2-b933-26aa-f40c-1c712061c6cb"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "a533a70c-60c6-de91-0a86-986931eb2167",
			"name": "MedicationAdministration-FHIR-API",
			"description": "",
			"order": [
				"1e1ba285-2005-b41e-2312-fed34a01b3f4",
				"612717b7-46c5-386f-555a-238cbe49c1ae",
				"95993b18-8891-5e4e-5d4a-ac412463c1e2",
				"bdc20dd0-a290-e375-cc59-75321b5273ca",
				"0c4330bf-614c-36ca-291b-62dded804f07",
				"0bf396dc-c193-bd8f-8d53-2f1d9b31675d",
				"4e936089-9554-6f43-3f97-0229ae73e694",
				"9fad7706-1c0f-4c30-bfb2-4db09b384db4",
				"c85f4294-6809-7070-2f80-e9c9342dcaef"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "32f4e0be-addf-e120-cb97-50ca9612b733",
			"name": "MedicationDispense-FHIR-API",
			"description": "",
			"order": [
				"53941906-8a4b-e3c8-fc57-8aa68dd2bbf8",
				"93c7e545-4464-ef9d-c952-c051fc0ade16",
				"0213ff1d-2b46-3397-d6d1-ba910618a81d",
				"fdbec846-f341-8b73-04bd-c0c350e6ee78",
				"106b79c1-e005-a5d9-6e43-379ebe99b7d0",
				"2272b9ce-4dc6-b3fe-9e99-210d3aa98cb9",
				"95d1e2d5-4493-cb3e-77ce-d4b293bc6ee1",
				"8ce92cc5-2bd2-651e-0c00-b7439a404e26",
				"2b98797e-ade8-e45f-961c-0124eb760dbe"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "2e0e338f-3d87-193d-b2c8-738d3e29f943",
			"name": "MedicationOrder-FHIR-API",
			"description": "",
			"order": [
				"3a5453bc-df75-d3bb-1c1b-3a81fcaeb9df",
				"1d6afd9b-bc6e-76ae-ee77-abc51c0a34c1",
				"0680e3d5-c16b-2587-f86e-3a07297e4c47",
				"a31617cb-4a39-6109-1528-63911d62cbc0",
				"6c253bd7-10d6-cdfa-b209-9f58ead191cd",
				"1ec2c311-ad30-83fe-cf00-01560cfccd44",
				"5f168c93-b220-79e1-66da-feec5bf180e0",
				"0fc65476-b0d1-6169-7eaf-aff9dcf88502",
				"af255fc7-7db1-0aa0-3c22-ffc3864ca0b9"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "e2b4e979-a477-4982-728c-5293a47a4587",
			"name": "MedicationStatement-FHIR-API",
			"description": "",
			"order": [
				"acc7d979-5210-89bf-8b7a-a725c1981b3d",
				"b4aa25fc-c941-d63e-8654-fc174be155df",
				"7e93ecb4-ce2a-991f-233a-f0adcfed18a0",
				"f323ef57-663b-156b-2bfc-ae702eda423e",
				"f28e0a2e-f5ec-09af-7b50-05e60de60e08",
				"4acbe98c-880d-e736-5414-fb8bc9d5e1bc",
				"1ae22b8f-3e62-c9d8-77fa-3a0e8f8feeb7",
				"756784ac-9ea7-0bfd-4451-10ef63805037",
				"5f3ff9a3-52fd-e0ac-3bbf-00728dbe440f"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "9f0e9de6-dbc2-723b-0d55-9c80397d1794",
			"name": "Observation-FHIR-API",
			"description": "",
			"order": [
				"3dc91beb-edda-1ff7-c834-4df970caae07",
				"d6501716-577d-98de-3013-71e6d2fceda5",
				"25510b8a-778f-1d5e-5ed0-392af86c8306",
				"a51ed712-9e43-b801-474e-4637ca8077eb",
				"4b0c3341-53f6-2dd4-986a-e163faa94661",
				"30b1c231-38e8-f0ee-ef8b-d0eae364229b",
				"934188b8-b27d-e813-40e8-ffa3de5d8f66",
				"e7a16079-ae60-455f-744f-61bc91cbd75e",
				"55125886-530c-03d6-5152-9fc552f5ca54"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "d85ad70b-e5a1-9145-848a-669c7ff6eb31",
			"name": "Patient-FHIR-API",
			"description": "",
			"order": [
				"e359bbc9-db2c-3408-ffa5-4937160dc735",
				"cc8a2812-8236-018e-0c65-05886dbfe095",
				"4c1eadf1-be42-8378-dc70-34433fdccdaf",
				"a3442e7c-558b-6dec-7059-c15050a263b8",
				"bfd8587e-d6a7-1c27-cc51-1c8a55af48fc",
				"db757453-d91c-bd1d-86c0-23f5b05bf73b",
				"f1dff87d-ee1c-4fa5-2602-8cce46f9889f",
				"508b186e-5ed8-ca34-b138-f4d75c490071",
				"b9b887b8-e764-5ed2-4061-18eb59c7c33a",
				"5d715c58-f0ba-9eb5-2d39-bd5f9a7f8de2",
				"30405996-0c4f-2c99-09ba-df105b1a0554"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "066585a1-5a58-cde0-746c-7cc22b9f763f",
			"name": "Practitioner-FHIR-API",
			"description": "",
			"order": [
				"e6c29a09-dfe0-e65b-83fe-d8d7a40d090b",
				"1ef7bc01-9181-7f06-b379-b367dbba287f",
				"3b33e57a-7c9e-7237-0c64-8f74b6306fe2",
				"d8fec425-4a00-98fa-7bf8-6ca5142ecad0",
				"83a8540b-3bc2-dc48-47b5-04d244c32f56",
				"5203c3c3-ecc1-d8a7-f13f-6febffdee309",
				"42a18422-23f9-98de-9099-706a7eec9b21",
				"436cb277-601e-fdff-4f80-ba4f97aba21e",
				"377c4842-5af2-dc3a-0204-867028b41c60"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "778f997a-b551-0a3b-845d-d8fa3a9d3b9f",
			"name": "Procedure-FHIR-API",
			"description": "",
			"order": [
				"369d4131-724f-5115-7154-8c70cc72b6c7",
				"733df8a9-edf0-6cc9-6e75-8667d33dc425",
				"31247a29-5cea-49aa-0e51-eb8cc159348b",
				"05d3bf59-9c24-5538-5fdc-65f58526d43a",
				"ad7101c7-acd0-fb3a-ec4f-b7a086aa40a7",
				"962145ad-af6e-8f3c-da08-3445104b4b20",
				"2913af3b-d2a5-4a2c-7f94-3308eecedd99",
				"53181c27-924e-f2e4-4ffd-fc5a52b52cb7",
				"e297fb1e-aee6-92bb-c1db-27131b33f2a9"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		},
		{
			"id": "2f45c90a-314e-8c61-7fc3-8387eda8424f",
			"name": "Schedule-FHIR-API",
			"description": "",
			"order": [
				"ee32a777-b9da-3cd4-c48f-1c9f3911318e",
				"9b41e45f-f2f7-d382-4900-5b64ef19ed2b",
				"264df056-4e5d-7a3e-8c15-9e01e60c69d6",
				"67a3d53e-7f64-be85-7ea9-10291dc8c1b4",
				"3cfccef5-2d91-058e-47a2-bc10dd4b265c",
				"f8ff7346-e60c-b2bf-5443-9f2e63184f4d",
				"64d2a9c8-4f78-7b86-d9ff-1748fae0134a",
				"1d9f419d-24db-12d3-7d7c-c4fe55cc8365",
				"3a3f617e-4b6b-a1dc-3604-3e613a1f2946"
			],
			"owner": "421038",
			"collectionId": "657ac6f2-4b68-e88e-b382-e28f595c4570"
		}
	],
	"timestamp": 1450344994851,
	"owner": "421038",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "00aff3ac-8859-4759-0ca3-4f8cce4f6a87",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458042505595,
			"name": "History of all Condition",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "1d64bbd8-4e32-5820-a73d-a16d8087e3d0"
		},
		{
			"id": "011ec6bf-a3a0-b2e5-1936-6989fae097b1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443129820,
			"name": " List of all tags affixed to the nominated version of the Coverage",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "0213ff1d-2b46-3397-d6d1-ba910618a81d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationDispense\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458132568416,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "32f4e0be-addf-e120-cb97-50ca9612b733"
		},
		{
			"id": "034661bc-6183-7bea-d274-1ecd76dda8cb",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045203346,
			"name": "History of a particular Coverage",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "20601fa7-64ac-2b14-f5ef-d8d1659c838a"
		},
		{
			"id": "040273aa-b30f-b94f-5a19-11d643009ed6",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/{{id}}/_history/1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Coverage\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045188545,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "20601fa7-64ac-2b14-f5ef-d8d1659c838a"
		},
		{
			"id": "0558255d-c76a-8ef5-2329-57030a0961e6",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651362057,
			"name": "Search Condition",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "1d64bbd8-4e32-5820-a73d-a16d8087e3d0"
		},
		{
			"id": "059b151f-0f04-2e05-ad77-d26c93e6a3e1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443280240,
			"name": "List of all tags used for Immunization",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "05d3bf59-9c24-5538-5fdc-65f58526d43a",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093122523,
			"name": "History of a particular Procedure",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "778f997a-b551-0a3b-845d-d8fa3a9d3b9f"
		},
		{
			"id": "0680e3d5-c16b-2587-f86e-3a07297e4c47",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationOrder\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093932985,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2e0e338f-3d87-193d-b2c8-738d3e29f943"
		},
		{
			"id": "081b6cec-650e-b1ea-d756-2d9886f54d4c",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443266273,
			"name": "List of all tags affixed to the nominated the Encounter",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "098f57e1-bc3b-2141-5198-858181a9f8a7",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443276780,
			"name": " Search Immunization using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "0a1f28e3-a32a-6b86-9d73-59a49992ef91",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443127041,
			"name": "List of all tags affixed to the nominated the Coverage",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "0a2552ed-3cb4-a48f-1c81-ee6536fad7cc",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443020383,
			"name": " Search Condition using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "0bf396dc-c193-bd8f-8d53-2f1d9b31675d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443293014,
			"name": " Search MedicationAdministration using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "0c4330bf-614c-36ca-291b-62dded804f07",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/_history?_since=2014-10-13T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091659173,
			"name": "History of all MedicationAdministration",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a533a70c-60c6-de91-0a86-986931eb2167"
		},
		{
			"id": "0dbc5b17-4449-495e-043a-408b4eab86fd",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"DocumentReference\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458090902120,
			"name": " Read single DocumentReference",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "7ef15731-ee41-dad9-2238-2e0f3bde7224"
		},
		{
			"id": "0dc34437-488e-7118-c212-4f8008d77634",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458048220000,
			"name": "History of all DiagnosticReport",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "50504b94-6911-259e-ba1b-f2eac4b524d9"
		},
		{
			"id": "0f890491-9699-22af-4af5-b2dce2965526",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091142578,
			"name": "History of a particular Encounter",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "120b5027-ed36-1ab9-65ef-899f4b73871f"
		},
		{
			"id": "0fc65476-b0d1-6169-7eaf-aff9dcf88502",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443325616,
			"name": "List of all tags affixed to the nominated the MedicationOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "106b79c1-e005-a5d9-6e43-379ebe99b7d0",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091759876,
			"name": "History of all MedicationDispense",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "32f4e0be-addf-e120-cb97-50ca9612b733"
		},
		{
			"id": "1878da0a-94d1-e779-2981-e0f55f6d096f",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458090914289,
			"name": "History of a particular DocumentReference",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "7ef15731-ee41-dad9-2238-2e0f3bde7224"
		},
		{
			"id": "197086b2-b933-26aa-f40c-1c712061c6cb",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443286858,
			"name": " List of all tags affixed to the nominated version of the Immunization",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "1ae22b8f-3e62-c9d8-77fa-3a0e8f8feeb7",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443337384,
			"name": "List of all tags used for MedicationStatement",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "1af58b11-bcd4-78e6-60fc-9ddec165dd3d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045846669,
			"name": "History of a particular DiagnosticOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "80593fdf-3c17-baed-9a90-830feee515ec"
		},
		{
			"id": "1c44d971-65df-17cb-178e-5e54c8a28864",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442989465,
			"name": " List of all tags affixed to the nominated version of the AllergyIntolerance",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "1d12a15e-b8ad-fca7-285a-00fa58e65cbd",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"DiagnosticOrder\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045836137,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "80593fdf-3c17-baed-9a90-830feee515ec"
		},
		{
			"id": "1d6afd9b-bc6e-76ae-ee77-abc51c0a34c1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationOrder\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091956563,
			"name": " Read single MedicationOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2e0e338f-3d87-193d-b2c8-738d3e29f943"
		},
		{
			"id": "1d9f419d-24db-12d3-7d7c-c4fe55cc8365",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443729624,
			"name": "List of all tags affixed to the nominated the Schedule",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "1e1ba285-2005-b41e-2312-fed34a01b3f4",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651405440,
			"name": "Search MedicationAdministration",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a533a70c-60c6-de91-0a86-986931eb2167"
		},
		{
			"id": "1ec2c311-ad30-83fe-cf00-01560cfccd44",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443320702,
			"name": " Search MedicationOrder using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "1ef7bc01-9181-7f06-b379-b367dbba287f",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Practitioner\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092935518,
			"name": " Read single Practitioner",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "066585a1-5a58-cde0-746c-7cc22b9f763f"
		},
		{
			"id": "2250651b-e8a5-5239-458e-3e7edf2f1b5a",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Coverage\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045179461,
			"name": " Read single Coverage",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "20601fa7-64ac-2b14-f5ef-d8d1659c838a"
		},
		{
			"id": "2272b9ce-4dc6-b3fe-9e99-210d3aa98cb9",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "353414",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443307333,
			"name": " Search MedicationDispense using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "2275011c-6d24-a6fb-0959-62845b3ac254",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "status",
					"value": "finished",
					"type": "text",
					"enabled": true
				},
				{
					"key": "patient",
					"value": "Patient/130849",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443259176,
			"name": " Search Encounter using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "237ed2a8-df1c-6632-2d71-3bdd69851ebe",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Binary",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\t//tests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460445665179,
			"name": "Read all Binary Objects",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "23f58603-4e94-439a-0f33-ceb184211ed5",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651375189,
			"name": "Search DiagnosticOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "80593fdf-3c17-baed-9a90-830feee515ec"
		},
		{
			"id": "25510b8a-778f-1d5e-5ed0-392af86c8306",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Observation\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092411099,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "9f0e9de6-dbc2-723b-0d55-9c80397d1794"
		},
		{
			"id": "264df056-4e5d-7a3e-8c15-9e01e60c69d6",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Schedule\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093242311,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2f45c90a-314e-8c61-7fc3-8387eda8424f"
		},
		{
			"id": "27eed0d2-4e3d-f134-1504-a1c6e99d9df1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/_history",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458094385123,
			"name": "History of all resources",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "63db44b1-7070-f6c0-c829-0ccf7278010c"
		},
		{
			"id": "2816e3a9-24aa-4b1b-2fea-9aacd0108835",
			"headers": "Authorization: {{base64}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/oauth/v2/accesstoken?grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\tpostman.setEnvironmentVariable(\"accesstoken\", \"Bearer \" + data.access_token);\n\t\ttests[\"Response time is less than 2000ms\"] = responseTime < 2000;\n\t\ttests[\"Check: expiresIn\"] = data.expires_in === \"3599\";\n\t}\n\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093408753,
			"name": "Generate access token",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"folder": "7bd21b65-43c0-cf17-e64b-c8c94155b27c"
		},
		{
			"id": "2913af3b-d2a5-4a2c-7f94-3308eecedd99",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443427308,
			"name": "List of all tags used for Procedure ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "2b15931d-a785-3ba7-a62e-6dd323a0c27b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443261624,
			"name": "List of all tags used for Encounter",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "2b98797e-ade8-e45f-961c-0124eb760dbe",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443316082,
			"name": " List of all tags affixed to the nominated version of the MedicationDispense",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "30405996-0c4f-2c99-09ba-df105b1a0554",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/{{id}}/$everything",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092552573,
			"name": "Fetch Patient Record for particular id",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d85ad70b-e5a1-9145-848a-669c7ff6eb31"
		},
		{
			"id": "30b1c231-38e8-f0ee-ef8b-d0eae364229b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443350649,
			"name": " Search Observation using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "31247a29-5cea-49aa-0e51-eb8cc159348b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Procedure\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093224431,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "778f997a-b551-0a3b-845d-d8fa3a9d3b9f"
		},
		{
			"id": "32e7037d-0b6f-364d-47a2-d15732519c8c",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458090916960,
			"name": "History of all DocumentReference",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "7ef15731-ee41-dad9-2238-2e0f3bde7224"
		},
		{
			"id": "357e1ad1-1142-9962-c01d-6d29ea4942d3",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442983108,
			"name": "List of all tags affixed to the nominated the CarePlan",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "369d4131-724f-5115-7154-8c70cc72b6c7",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651444804,
			"name": "Search  Procedure",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "778f997a-b551-0a3b-845d-d8fa3a9d3b9f"
		},
		{
			"id": "377c4842-5af2-dc3a-0204-867028b41c60",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443418720,
			"name": " List of all tags affixed to the nominated version of the Practitioner",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "3835a0d5-1ea0-ca5f-4aef-df352c420373",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"DocumentReference\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458132159612,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "7ef15731-ee41-dad9-2238-2e0f3bde7224"
		},
		{
			"id": "39919740-6e92-ccd1-594c-6b12d0eae42b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460445605859,
			"name": "List of all Tags used on Base Path",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "3a3f617e-4b6b-a1dc-3604-3e613a1f2946",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443468276,
			"name": " List of all tags affixed to the nominated version of the Schedule",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "3a5453bc-df75-d3bb-1c1b-3a81fcaeb9df",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651416665,
			"name": "Search  MedicationOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2e0e338f-3d87-193d-b2c8-738d3e29f943"
		},
		{
			"id": "3b33e57a-7c9e-7237-0c64-8f74b6306fe2",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Practitioner\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092940893,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "066585a1-5a58-cde0-746c-7cc22b9f763f"
		},
		{
			"id": "3be1f5b2-d21f-27f8-d928-843573361d16",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Binary/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458650010539,
			"name": "Read Binary Object by version",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "63db44b1-7070-f6c0-c829-0ccf7278010c"
		},
		{
			"id": "3cfccef5-2d91-058e-47a2-bc10dd4b265c",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093263736,
			"name": "History of all Schedules ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2f45c90a-314e-8c61-7fc3-8387eda8424f"
		},
		{
			"id": "3dc91beb-edda-1ff7-c834-4df970caae07",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651428094,
			"name": "Search  Observation",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "9f0e9de6-dbc2-723b-0d55-9c80397d1794"
		},
		{
			"id": "402f6c63-5da2-06b6-a981-b75fed5421b7",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Condition\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458042448438,
			"name": " Read single Condition",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "1d64bbd8-4e32-5820-a73d-a16d8087e3d0"
		},
		{
			"id": "42a18422-23f9-98de-9099-706a7eec9b21",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443410897,
			"name": "List of all tags used for Practitioner",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "436cb277-601e-fdff-4f80-ba4f97aba21e",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443413833,
			"name": "List of all tags affixed to the nominated the Practitioner",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "4495d1f9-31aa-deb0-d313-a649cba6a992",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"AllergyIntolerance\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458037868781,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a09541fd-3d21-aca8-063c-0c5c7ce5080e"
		},
		{
			"id": "477e2c55-b068-a542-6e8f-2bed5fc8e93d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Immunization\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091362734,
			"name": " Read single Immunization",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d479235a-05a6-a6b2-4101-7aeeda841743"
		},
		{
			"id": "488031b6-6bed-56ba-ad37-5894b231c205",
			"headers": "Authorization: {{accesstoken}}\naccept: application/json\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"DiagnosticReport\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458048163268,
			"name": " Read single DiagnosticReport",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "50504b94-6911-259e-ba1b-f2eac4b524d9"
		},
		{
			"id": "4a9d7573-1448-0c0c-44e9-5a046441ed57",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443268882,
			"name": " List of all tags affixed to the nominated version of the Encounter",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "4acbe98c-880d-e736-5414-fb8bc9d5e1bc",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443334690,
			"name": " Search MedicationStatement using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "4b0c3341-53f6-2dd4-986a-e163faa94661",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092262526,
			"name": "History of all Observation",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "9f0e9de6-dbc2-723b-0d55-9c80397d1794"
		},
		{
			"id": "4c1eadf1-be42-8378-dc70-34433fdccdaf",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Patient\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092754605,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d85ad70b-e5a1-9145-848a-669c7ff6eb31"
		},
		{
			"id": "4e936089-9554-6f43-3f97-0229ae73e694",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443295818,
			"name": "List of all tags used for MedicationAdministration",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "508b186e-5ed8-ca34-b138-f4d75c490071",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443395681,
			"name": "List of all tags affixed to the nominated the Patient ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "5203c3c3-ecc1-d8a7-f13f-6febffdee309",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "gender",
					"value": "female",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443407615,
			"name": " Search Practitioner using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "53181c27-924e-f2e4-4ffd-fc5a52b52cb7",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443429979,
			"name": "List of all tags affixed to the nominated the Procedure",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "53941906-8a4b-e3c8-fc57-8aa68dd2bbf8",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651411499,
			"name": "Search  MedicationDispense",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "32f4e0be-addf-e120-cb97-50ca9612b733"
		},
		{
			"id": "54c925df-e824-4c45-1e26-941492a9a6a9",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458042502214,
			"name": "History of a particular Condition",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "1d64bbd8-4e32-5820-a73d-a16d8087e3d0"
		},
		{
			"id": "54e16783-699f-14b1-7bb9-5f4749771186",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458048207967,
			"name": "History of a particular DiagnosticReport",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "50504b94-6911-259e-ba1b-f2eac4b524d9"
		},
		{
			"id": "55125886-530c-03d6-5152-9fc552f5ca54",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443365097,
			"name": " List of all tags affixed to the nominated version of the Observation",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "56617494-31d4-1c76-3fc1-8c5ecc81e0a6",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443221380,
			"name": "List of all tags used for DiagnosticReport",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "57f998a3-6af2-7d89-0777-c0e9d02a72c8",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "event-status",
					"value": "accepted",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443203584,
			"name": " Search DiagnosticOrder using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "59c054cd-a989-54be-9fc6-d644c5eb296c",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091379516,
			"name": "History of a particular Immunization",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d479235a-05a6-a6b2-4101-7aeeda841743"
		},
		{
			"id": "5bc83490-d6c9-7f60-6cc8-7bb5a9378d2c",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "OPTIONS",
			"data": [],
			"dataMode": "params",
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Conformance\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460446350184,
			"name": "Read Conformance(metadata)",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693"
		},
		{
			"id": "5c9aa8f3-82d9-6d3e-706f-e115e8702b81",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651397668,
			"name": "Search Immunization",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d479235a-05a6-a6b2-4101-7aeeda841743"
		},
		{
			"id": "5d715c58-f0ba-9eb5-2d39-bd5f9a7f8de2",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/$everything",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092558419,
			"name": "Fetch all patient records",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d85ad70b-e5a1-9145-848a-669c7ff6eb31"
		},
		{
			"id": "5f11d13f-92c8-1c86-cb5c-3533631a39c4",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443208147,
			"name": "List of all tags used for DiagnosticOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "5f168c93-b220-79e1-66da-feec5bf180e0",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443323108,
			"name": "List of all tags used for MedicationOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "5f3ff9a3-52fd-e0ac-3bbf-00728dbe440f",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443343398,
			"name": " List of all tags affixed to the nominated version of the MedicationStatement",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "610b2ef6-3b1b-ccca-3552-83facf336235",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Composition",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651347918,
			"name": "Read all Compositions",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "63db44b1-7070-f6c0-c829-0ccf7278010c"
		},
		{
			"id": "612717b7-46c5-386f-555a-238cbe49c1ae",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationAdministration\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091633501,
			"name": " Read single MedicationAdministration",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a533a70c-60c6-de91-0a86-986931eb2167"
		},
		{
			"id": "636a98b1-b4fc-30dc-c4d3-ebc05fc5d889",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/{{id}}/_history/1/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443031158,
			"name": " List of all tags affixed to the nominated version of the Condition",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "64d2a9c8-4f78-7b86-d9ff-1748fae0134a",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443458389,
			"name": "List of all tags used for Schedule",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "67a3d53e-7f64-be85-7ea9-10291dc8c1b4",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093262011,
			"name": "History of a particular Schedule",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2f45c90a-314e-8c61-7fc3-8387eda8424f"
		},
		{
			"id": "6a8e5804-3a0b-754d-11a5-85a3309a6d08",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"CarePlan\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458129595167,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2c6a9f02-1720-1ba1-e3a1-4d174a7a22e9"
		},
		{
			"id": "6c253bd7-10d6-cdfa-b209-9f58ead191cd",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091982284,
			"name": "History of all MedicationOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2e0e338f-3d87-193d-b2c8-738d3e29f943"
		},
		{
			"id": "6dff29b6-9c8a-9a57-184b-fc2a0720bd28",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Encounter\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091189031,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "120b5027-ed36-1ab9-65ef-899f4b73871f"
		},
		{
			"id": "6f2a8abb-5156-09ee-f9f6-7940feb54d02",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443283594,
			"name": "List of all tags affixed to the nominated the Immunization",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "6ffd6a58-520f-e84f-7f44-668518d9a4ff",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443224008,
			"name": "List of all tags affixed to the nominated the DiagnosticReport",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "733df8a9-edf0-6cc9-6e75-8667d33dc425",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Procedure\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093221358,
			"name": " Read single Procedure",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "778f997a-b551-0a3b-845d-d8fa3a9d3b9f"
		},
		{
			"id": "735bcb68-0264-5fa5-006b-35e2c1b8480d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"DiagnosticOrder\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045791103,
			"name": " Read single DiagnosticOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "80593fdf-3c17-baed-9a90-830feee515ec"
		},
		{
			"id": "73e2668b-0d1f-b68c-dcab-a3b1467c5674",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Encounter\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091055054,
			"name": " Read single Encounter",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "120b5027-ed36-1ab9-65ef-899f4b73871f"
		},
		{
			"id": "756784ac-9ea7-0bfd-4451-10ef63805037",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443340265,
			"name": "List of all tags affixed to the nominated the MedicationStatement",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "79fc8563-ecce-0d84-1b81-a46e558ff220",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442985057,
			"name": "List of all tags used for CarePlan",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "7a53de24-b143-85d8-9fd8-5900a8531c51",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443027763,
			"name": "List of all tags affixed to the nominated the Condition",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "7e93ecb4-ce2a-991f-233a-f0adcfed18a0",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationStatement\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458132643251,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "e2b4e979-a477-4982-728c-5293a47a4587"
		},
		{
			"id": "83a8540b-3bc2-dc48-47b5-04d244c32f56",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092954037,
			"name": "History of all Practitioner",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "066585a1-5a58-cde0-746c-7cc22b9f763f"
		},
		{
			"id": "8609f2fe-fced-1b90-2aa1-8596510f9905",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442926501,
			"name": " Search AllergyIntolerance using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "8ce92cc5-2bd2-651e-0c00-b7439a404e26",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443313723,
			"name": "List of all tags affixed to the nominated the MedicationDispense",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "92b90325-a8da-55ea-4300-0dbfd107bd35",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "identifier",
					"value": "http://benefitsinc.com/certificate|12345",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443135919,
			"name": " Search Coverage using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "92d8d45b-4925-a6ef-6ce1-7472fc0a062b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage?issuer=Organization/Organization2",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458654373754,
			"name": "Search Coverage",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "20601fa7-64ac-2b14-f5ef-d8d1659c838a"
		},
		{
			"id": "934188b8-b27d-e813-40e8-ffa3de5d8f66",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443353940,
			"name": "List of all tags used for Observation",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "9397f1a0-e85e-99e4-ccca-8406d717ef48",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter?status=finished",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458655030980,
			"name": "Search Encounter ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "120b5027-ed36-1ab9-65ef-899f4b73871f"
		},
		{
			"id": "93c7e545-4464-ef9d-c952-c051fc0ade16",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationDispense\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091745745,
			"name": " Read single MedicationDispense",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "32f4e0be-addf-e120-cb97-50ca9612b733"
		},
		{
			"id": "95993b18-8891-5e4e-5d4a-ac412463c1e2",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationAdministration\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458132539218,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a533a70c-60c6-de91-0a86-986931eb2167"
		},
		{
			"id": "95d1e2d5-4493-cb3e-77ce-d4b293bc6ee1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443311127,
			"name": "List of all tags used for MedicationDispense",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "95f6ee34-57a8-3a2f-4045-14ec05dfe1bd",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443249318,
			"name": " Search DocumentReference using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "962145ad-af6e-8f3c-da08-3445104b4b20",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "subject",
					"value": "Patient/1636345",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443424541,
			"name": " Search Procedure using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "971c97b6-fe07-d726-e26d-a90402422679",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"AllergyIntolerance\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442413525,
			"name": " Read single AllergyIntolerance",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "97fb956c-5803-8497-f3ae-3a7f11d98fd6",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458037899300,
			"name": "History of all AllergyIntolerance",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a09541fd-3d21-aca8-063c-0c5c7ce5080e"
		},
		{
			"id": "9b41e45f-f2f7-d382-4900-5b64ef19ed2b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Schedule\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093248117,
			"name": " Read single Schedule",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2f45c90a-314e-8c61-7fc3-8387eda8424f"
		},
		{
			"id": "9fad7706-1c0f-4c30-bfb2-4db09b384db4",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443298711,
			"name": "List of all tags affixed to the nominated the MedicationAdministration",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "a31617cb-4a39-6109-1528-63911d62cbc0",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091979608,
			"name": "History of a particular MedicationOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2e0e338f-3d87-193d-b2c8-738d3e29f943"
		},
		{
			"id": "a3442e7c-558b-6dec-7059-c15050a263b8",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092448016,
			"name": "History of a particular patient ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d85ad70b-e5a1-9145-848a-669c7ff6eb31"
		},
		{
			"id": "a51ed712-9e43-b801-474e-4637ca8077eb",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092259973,
			"name": "History of a particular Observation",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "9f0e9de6-dbc2-723b-0d55-9c80397d1794"
		},
		{
			"id": "a8bd8ab6-8d96-1b7e-0316-42abef6c0901",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/{{id}}/$everything",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443271268,
			"name": "Fetch Encounter record",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "acc7d979-5210-89bf-8b7a-a725c1981b3d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651422779,
			"name": "Search  MedicationStatement",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "e2b4e979-a477-4982-728c-5293a47a4587"
		},
		{
			"id": "ad7101c7-acd0-fb3a-ec4f-b7a086aa40a7",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458093124779,
			"name": "History of all Procedure",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "778f997a-b551-0a3b-845d-d8fa3a9d3b9f"
		},
		{
			"id": "ae175f68-ee4c-45ef-e7bb-1c9cc6a7465d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443247673,
			"name": "List of all tags affixed to the nominated the DocumentReference",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "aebbe331-9692-b382-0b26-8a875dd14180",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443248391,
			"name": "List of all tags used for DocumentReference",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "af255fc7-7db1-0aa0-3c22-ffc3864ca0b9",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationOrder/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443328114,
			"name": " List of all tags affixed to the nominated version of the MedicationOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "b3cc973b-d625-9a34-e51d-22e2f934e615",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Immunization\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458132402805,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d479235a-05a6-a6b2-4101-7aeeda841743"
		},
		{
			"id": "b43c2544-3afe-065d-9224-58c834d92af2",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443213635,
			"name": " List of all tags affixed to the nominated version of the DiagnosticOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "b4476a5c-a7c9-a216-d120-5be74a4ed1fc",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443024184,
			"name": "List of all tags used for Condition",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "b4aa25fc-c941-d63e-8654-fc174be155df",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"MedicationStatement\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092061995,
			"name": " Read single MedicationStatement",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "e2b4e979-a477-4982-728c-5293a47a4587"
		},
		{
			"id": "b6005bf2-f14c-25c1-efd4-dbfc69338b56",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443210246,
			"name": "List of all tags affixed to the nominated the DiagnosticOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "b6a7ae07-eae4-8c37-ae58-9d90a1accb08",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"DiagnosticReport\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458048186732,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "50504b94-6911-259e-ba1b-f2eac4b524d9"
		},
		{
			"id": "b8379922-2796-7304-b289-0c68c7ba8052",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458042042728,
			"name": "History of all CarePlan",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2c6a9f02-1720-1ba1-e3a1-4d174a7a22e9"
		},
		{
			"id": "b917bdb5-26c8-d074-a663-a723b173c749",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Binary/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458649357326,
			"name": "Read specific Binary Object",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "63db44b1-7070-f6c0-c829-0ccf7278010c"
		},
		{
			"id": "b9b887b8-e764-5ed2-4061-18eb59c7c33a",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443390439,
			"name": " List of all tags affixed to the nominated version of the Patient  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "bdc20dd0-a290-e375-cc59-75321b5273ca",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091655888,
			"name": "History of a particular MedicationAdministration",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a533a70c-60c6-de91-0a86-986931eb2167"
		},
		{
			"id": "bfd8587e-d6a7-1c27-cc51-1c8a55af48fc",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092450040,
			"name": "History of all patients ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d85ad70b-e5a1-9145-848a-669c7ff6eb31"
		},
		{
			"id": "c14dbe5a-a233-3bd0-fa35-35c354ff9252",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045207889,
			"name": "History of all Coverage",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "20601fa7-64ac-2b14-f5ef-d8d1659c838a"
		},
		{
			"id": "c49b966b-402e-77b5-014c-a27fdee18359",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Coverage/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443123815,
			"name": "List of all tags used for Coverage",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "c85f4294-6809-7070-2f80-e9c9342dcaef",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationAdministration/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443302259,
			"name": " List of all tags affixed to the nominated version of the MedicationAdministration",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "c8658ecb-7a2e-029e-0464-15a00361a7f8",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan?patient=Patient/Patientexample",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458654178933,
			"name": "Search  CarePlan ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2c6a9f02-1720-1ba1-e3a1-4d174a7a22e9"
		},
		{
			"id": "cc8a2812-8236-018e-0c65-05886dbfe095",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Patient\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092397446,
			"name": " Read single patient",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d85ad70b-e5a1-9145-848a-669c7ff6eb31"
		},
		{
			"id": "ccf66a14-f31e-8dcd-68d8-a527a21d37c7",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference?created=2005-12-24",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651387695,
			"name": "Search DocumentReference",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "7ef15731-ee41-dad9-2238-2e0f3bde7224"
		},
		{
			"id": "ceb9a34d-6c77-63d1-b5d8-94553401f29c",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DocumentReference/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443245359,
			"name": " List of all tags affixed to the nominated version of the DocumentReference",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "cff3821c-171f-a779-c689-031ef0bc96c1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"CarePlan\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458042002769,
			"name": " Read single CarePlan",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2c6a9f02-1720-1ba1-e3a1-4d174a7a22e9"
		},
		{
			"id": "d068c795-7cee-f6e5-7c2b-1e4df76919da",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/{{id}}/_history/1/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443227160,
			"name": " List of all tags affixed to the nominated version of the DiagnosticReport",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "d0e4f2c0-a8f7-c191-f5e6-4663c413fd32",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442977781,
			"name": " List of all tags affixed to the nominated version of the CarePlan",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "d2dc91c3-d055-fa78-9916-7f76ae96ad54",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Encounter/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091145093,
			"name": "History of all Encounter",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "120b5027-ed36-1ab9-65ef-899f4b73871f"
		},
		{
			"id": "d39d2cca-0e12-f035-2369-83cf972fefed",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442986993,
			"name": " Search CarePlan using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "d5b9371f-bb02-2357-ad01-66231072bf64",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Composition/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Composition\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458650198320,
			"name": "Read Composition with ID",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "63db44b1-7070-f6c0-c829-0ccf7278010c"
		},
		{
			"id": "d60fe587-8de9-cf78-9f82-0d1b4f79150e",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticOrder/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458045850339,
			"name": "History of all DiagnosticOrder",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "80593fdf-3c17-baed-9a90-830feee515ec"
		},
		{
			"id": "d6501716-577d-98de-3013-71e6d2fceda5",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/{{id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Observation\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092245822,
			"name": " Read single Observation",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "9f0e9de6-dbc2-723b-0d55-9c80397d1794"
		},
		{
			"id": "d8fec425-4a00-98fa-7bf8-6ca5142ecad0",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092950896,
			"name": "History of a particular Practitioner",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "066585a1-5a58-cde0-746c-7cc22b9f763f"
		},
		{
			"id": "db757453-d91c-bd1d-86c0-23f5b05bf73b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "gender",
					"value": "female",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443374260,
			"name": " Search Patient using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "df83f372-1b49-a784-81a3-733a075e9bc1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/CarePlan/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458042037519,
			"name": "History of a particular CarePlan",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2c6a9f02-1720-1ba1-e3a1-4d174a7a22e9"
		},
		{
			"id": "e297fb1e-aee6-92bb-c1db-27131b33f2a9",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Procedure/{{id}}/_history/{{vid}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443433761,
			"name": " List of all tags affixed to the nominated version of the Procedure",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "e359bbc9-db2c-3408-ffa5-4937160dc735",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient?active=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458654636900,
			"name": "Search patient",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d85ad70b-e5a1-9145-848a-669c7ff6eb31"
		},
		{
			"id": "e6c29a09-dfe0-e65b-83fe-d8d7a40d090b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Practitioner?address=New York",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458654798519,
			"name": "Search  Practitioner",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "066585a1-5a58-cde0-746c-7cc22b9f763f"
		},
		{
			"id": "e7a16079-ae60-455f-744f-61bc91cbd75e",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Observation/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443356562,
			"name": "List of all tags affixed to the nominated the Observation",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "e8e028e8-071f-972a-6b64-f1f29e6ed34b",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458037310775,
			"name": "History of a particular AllergyIntolerance",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a09541fd-3d21-aca8-063c-0c5c7ce5080e"
		},
		{
			"id": "ec117b74-9747-e906-7fba-06de1fb96043",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Condition/{{id}}/_history/{{vid}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Condition\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458042471616,
			"name": "Read by version  ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "1d64bbd8-4e32-5820-a73d-a16d8087e3d0"
		},
		{
			"id": "ee32a777-b9da-3cd4-c48f-1c9f3911318e",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651449635,
			"name": "Search Schedule",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "2f45c90a-314e-8c61-7fc3-8387eda8424f"
		},
		{
			"id": "ee35ef4f-8e92-422c-98dc-8da92e7159d1",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance?category=food",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458654104611,
			"name": "Search AllergyIntolerance",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "a09541fd-3d21-aca8-063c-0c5c7ce5080e"
		},
		{
			"id": "efdad849-691a-f956-da68-10467f482c1d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/metadata",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource is present in JSON data\"] = jsonData.resourceType === \"Conformance\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460446353611,
			"name": "Read Conformance(metadata)",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693"
		},
		{
			"id": "efe5c23b-3731-978e-7945-b0bc7f81da0c",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n\n\tvar data = JSON.parse(responseBody);\n\t\t\n\ttests[\"Status code is 200\"] = responseCode.code === 200;\n\n\tif(responseCode.code === 200) {\n\t\ttests[\"Response time is less than 5000ms\"] = responseTime < 5000;\n\t    var id = data.entry[0].resource.id;\n\t\tpostman.setGlobalVariable(\"id\", id);\n\t    var vid = data.entry[0].resource.meta.versionId;\n\t\tpostman.setGlobalVariable(\"vid\", vid);\n\t}\n\t\n\tvar testsFailed = false; \n\n\tfor (var attrib in tests) {\n\t\tif(tests[attrib] === false) {\n\t\t\ttestsFailed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(testsFailed)\n\t\tconsole.error(\"Test Failed. Response obtained: \" + JSON.stringify(data));\n\t\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458651382864,
			"name": "Search DiagnosticReport",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "50504b94-6911-259e-ba1b-f2eac4b524d9"
		},
		{
			"id": "f1d772c6-56f6-7a7f-38f0-d7273f943c24",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/{{id}}/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n   // tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442991905,
			"name": "List of all tags affixed to the nominated the AllergyIntolerance",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "f1dff87d-ee1c-4fa5-2602-8cce46f9889f",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Patient/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443380205,
			"name": "List of all tags used for Patient ",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "f1eff018-b7c7-8c2c-03d2-40535d6dd8d4",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/DiagnosticReport/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "_id",
					"value": "{{id}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n   // tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443218741,
			"name": " Search DiagnosticReport using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "f28e0a2e-f5ec-09af-7b50-05e60de60e08",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092186935,
			"name": "History of all MedicationStatement",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "e2b4e979-a477-4982-728c-5293a47a4587"
		},
		{
			"id": "f323ef57-663b-156b-2bfc-ae702eda423e",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationStatement/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458092184718,
			"name": "History of a particular MedicationStatement",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "e2b4e979-a477-4982-728c-5293a47a4587"
		},
		{
			"id": "f8ff7346-e60c-b2bf-5443-9f2e63184f4d",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Schedule/_search",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "identifier",
					"value": "http://example.com/fictitious-mrns|MRN001",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460443442151,
			"name": " Search Schedule using POST",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		},
		{
			"id": "fc717e33-464c-c98a-c37a-a0152111f488",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/Immunization/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091382705,
			"name": "History of all Immunization",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "d479235a-05a6-a6b2-4101-7aeeda841743"
		},
		{
			"id": "fdbec846-f341-8b73-04bd-c0c350e6ee78",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/MedicationDispense/{{id}}/_history?_since=2014-09-09T10:23:45&_count=5",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Bundle\"] = jsonData.resourceType === \"Bundle\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1458091757322,
			"name": "History of a particular MedicationDispense",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": [],
			"folder": "32f4e0be-addf-e120-cb97-50ca9612b733"
		},
		{
			"id": "feec0492-ecef-175a-8ed0-257e03cf6415",
			"headers": "Authorization: {{accesstoken}}\n",
			"url": "https://{{org}}-{{env}}.apigee.net/{{basepath}}/AllergyIntolerance/$meta",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "try{\n    tests[\"Status code is 200\"] = (responseCode.code === 200 || responseCode.code === 201);\n    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n    tests[\"Content-Length is present\"] = postman.getResponseHeader(\"Content-Length\");\n    //tests[\"Content-Location is present\"] = postman.getResponseHeader(\"Content-Location\");\n    \n    var jsonData = JSON.parse(responseBody);\n    tests[\"Resource type is Parameters\"] = jsonData.resourceType === \"Parameters\";\n    \n    var contentLoc = postman.getResponseHeader(\"Content-Location\");\n    if(contentLoc)\n    {\n        var org = postman.getEnvironmentVariable(\"org\");\n        tests[\"Content Location Header has correct org\"] = contentLoc.indexOf(org);\n    }\n} catch(err) {\n    tests[\"Test execution\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460442996992,
			"name": "List of all tags used for AllergyIntolerance",
			"description": "",
			"collectionId": "96daef6f-80d7-5488-996e-b30cecee2693",
			"responses": []
		}
	]
}