<?php
use Drupal\devconnect\Crypto;
require_once DRUPAL_ROOT . '/profiles/apigee/modules/custom/devconnect/lib/Crypto.php';

//define('SMARTDOCS_SAMPLE_PETSTORE_MODEL', 'petstore example');
//define('SMARTDOCS_SAMPLE_WEATHER_MODEL', 'weather example');
define('SMARTDOCS_OAUTH_MODEL', 'OAuth');
define('SMARTDOCS_PATIENT_MODEL', 'Patient');
define('SMARTDOCS_ALLERGYINTOLERANCE_MODEL', 'AllergyIntolerance');
define('SMARTDOCS_CAREPLAN_MODEL', 'CarePlan');
define('SMARTDOCS_CONDITION_MODEL', 'Condition');
define('SMARTDOCS_COVERAGE_MODEL', 'Coverage');
define('SMARTDOCS_DIAGONESTICORDER_MODEL', 'DiagnosticOrder');
define('SMARTDOCS_DIAGONESTICREPORT_MODEL', 'DiagnosticReport');
define('SMARTDOCS_DOCUMENTREFERENCE_MODEL', 'DocumentReference');
define('SMARTDOCS_ENCOUNTER_MODEL', 'Encounter');
define('SMARTDOCS_IMMUNIZATION_MODEL', 'Immunization');
define('SMARTDOCS_MEDICATIONADMINISTRATION_MODEL', 'MedicationAdministration');
define('SMARTDOCS_MEDICATIONDISPENSE_MODEL', 'MedicationDispense');
define('SMARTDOCS_MEDICATIONORDER_MODEL', 'MedicationOrder');
define('SMARTDOCS_MEDICATIONSTATEMENT_MODEL', 'MedicationStatement');
define('SMARTDOCS_OBSERVATION_MODEL', 'Observation');
define('SMARTDOCS_PRACTIOTIONER_MODEL', 'Practitioner');
define('SMARTDOCS_PROCEDURE_MODEL', 'Procedure');
define('SMARTDOCS_BASEPATH_MODEL', 'BasePath');
define('SMARTDOCS_SCHEDULE_MODEL', 'Schedule');

ini_set('arg_separator.output', '&');

function fhir_swagger_menu() {
    $items = array();
 
	  $items['swagger/import'] = array(
         'title' => 'Create and import SmartDocs models',
        'page callback' => 'custom_apigee_smartdocs_import_model_content',
		'access arguments' => array('access content'),
       );
		   
  	
	  $items['swagger/publish'] = array(
		 'title' => 'Render and publish models',
		'page callback' => 'custom_apigee_smartdocs_render_model_content',
		'access arguments' => array('access content'),
	   );
	   
    return $items;	
    
}

/**
 * Create model and import Swagger file to load content.
 */
function custom_apigee_smartdocs_import_model_content() {
  
  global $install_state;
  _custom_apigee_manage_memory();
  

  // Create SmartDocs  model and Import swagger file model. ####################################
  
  /*$model_display_name = 'Pet Store Example API';
  $model_description = 'Manage inventory and users through an example REST API patterned after the classic pet store demo.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_SAMPLE_PETSTORE_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/petstore.swagger.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_SAMPLE_PETSTORE_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  
  $model_display_name = 'Weather Example API';
  $model_description = 'Get weather reports for any location using the Yahoo Weather API.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_SAMPLE_WEATHER_MODEL,
      $model_display_name,
      $model_description,
    ),
  );

  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/weather.xml';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_SAMPLE_WEATHER_MODEL,
      $model_import_file,
      'wadl',
      'application/xml',
    ),
  );
  */
  
  $model_display_name = 'Authorization API';
  $model_description = 'OAuth API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_OAUTH_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/OAuth-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_OAUTH_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Patient API';
  $model_description = 'Patient resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_PATIENT_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Patient-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_PATIENT_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'AllergyIntolerance API';
  $model_description = 'FHIR AllergyIntolerance resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_ALLERGYINTOLERANCE_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/AllergyIntolerance-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_ALLERGYINTOLERANCE_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'CarePlan API';
  $model_description = 'FHIR CarePlan resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_CAREPLAN_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/CarePlan-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_CAREPLAN_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Condition API';
  $model_description = 'FHIR Condition resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_CONDITION_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Condition-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_CONDITION_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Coverage API';
  $model_description = 'FHIR Coverage resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_COVERAGE_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Coverage-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_COVERAGE_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'DiagnosticOrder API';
  $model_description = 'FHIR DiagnosticOrder resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_DIAGONESTICORDER_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/DiagnosticOrder-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_DIAGONESTICORDER_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  
  $model_display_name = 'DiagnosticReport API';
  $model_description = 'FHIR DiagnosticReport resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_DIAGONESTICREPORT_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/DiagnosticReport-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_DIAGONESTICREPORT_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'DocumentReference API';
  $model_description = 'FHIR DocumentReference resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_DOCUMENTREFERENCE_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/DocumentReference-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_DOCUMENTREFERENCE_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Encounter API';
  $model_description = 'Encounter API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_ENCOUNTER_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Encounter-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_ENCOUNTER_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Immunization API';
  $model_description = 'FHIR Immunization resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_IMMUNIZATION_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Immunization-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_IMMUNIZATION_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'MedicationAdministration API';
  $model_description = 'FHIR MedicationAdministration resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_MEDICATIONADMINISTRATION_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/MedicationAdministration-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_MEDICATIONADMINISTRATION_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'MedicationDispense API';
  $model_description = 'FHIR MedicationDispense resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_MEDICATIONDISPENSE_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/MedicationDispense-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_MEDICATIONDISPENSE_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'MedicationOrder API';
  $model_description = 'FHIR MedicationOrder resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_MEDICATIONORDER_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/MedicationOrder-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_MEDICATIONORDER_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'MedicationStatement API';
  $model_description = 'FHIR MedicationStatement resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_MEDICATIONSTATEMENT_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/MedicationStatement-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_MEDICATIONSTATEMENT_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Observation API';
  $model_description = 'FHIR Observation resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_OBSERVATION_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Observation-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_OBSERVATION_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Practitioner API';
  $model_description = 'FHIR Practitioner resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_PRACTIOTIONER_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Practitioner-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_PRACTIOTIONER_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Procedure API';
  $model_description = 'FHIR Procedure resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_PROCEDURE_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Procedure-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_PROCEDURE_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'FHIR server Base Path API';
  $model_description = 'FHIR Base Path API Documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_BASEPATH_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/BasePath-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_BASEPATH_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  $model_display_name = 'Schedule API';
  $model_description = 'FHIR Schedule resource API documentation.';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_create_model',
    array(
      SMARTDOCS_SCHEDULE_MODEL,
      $model_display_name,
      $model_description,
    ),
  );
  
  $model_import_file = drupal_get_path('module', 'fhir_swagger') . '/swaggers/Schedule-api.json';
  $operations[] = array(
    'custom_apigee_batch_smartdocs_import_model',
    array(
      SMARTDOCS_SCHEDULE_MODEL,
      $model_import_file,
      'swagger',
      'application/json',
    ),
  );
  
  // Create SmartDocs  model and Import swagger file model -Completed ###########################################
  
  

  $batch = array(
    'operations' => $operations,
    'title' => t('Creating and importing SmartDocs models'),
    'init_message' => t('SmartDocs model creation has started...'),
	'file' => drupal_get_path('module', 'fhir_swagger') . '/fhir_swagger.install_callbacks.inc',
	'error_message' => t('batch process failed'),
	);
	
	batch_set($batch);
	batch_process('node/1');

	//return $batch;
}

/**
 * Renders and publishes SmartDocs nodes.
 *
 * @return mixed
 *   The batch API array.
 */
function custom_apigee_smartdocs_render_model_content() {
  
  global $install_state;
 _apigee_manage_memory();
  drupal_set_message('Rendering SmartDocs documentation pages.', 'status');
  require_once drupal_get_path('module', 'smartdocs') . '/batch/smartdocs.render.inc';

  // Get batches to render model nodes. #################################################################
  //$batch_pet = custom_get_smartdocs_render_batch(SMARTDOCS_SAMPLE_PETSTORE_MODEL);
  //$batch_weather = custom_get_smartdocs_render_batch(SMARTDOCS_SAMPLE_WEATHER_MODEL);
  $batch_oauth = custom_get_smartdocs_render_batch(SMARTDOCS_OAUTH_MODEL);
  $batch_patient = custom_get_smartdocs_render_batch(SMARTDOCS_PATIENT_MODEL);
  $batch_allergyintolerance = custom_get_smartdocs_render_batch(SMARTDOCS_ALLERGYINTOLERANCE_MODEL);
  $batch_carePlan = custom_get_smartdocs_render_batch(SMARTDOCS_CAREPLAN_MODEL);
  $batch_condition = custom_get_smartdocs_render_batch(SMARTDOCS_CONDITION_MODEL);
  $batch_coverage = custom_get_smartdocs_render_batch(SMARTDOCS_COVERAGE_MODEL);
  $batch_diagnosticorder = custom_get_smartdocs_render_batch(SMARTDOCS_DIAGONESTICORDER_MODEL);
  $batch_diagnosticreport = custom_get_smartdocs_render_batch(SMARTDOCS_DIAGONESTICREPORT_MODEL);
  $batch_documentreference = custom_get_smartdocs_render_batch(SMARTDOCS_DOCUMENTREFERENCE_MODEL);
  $batch_encounter = custom_get_smartdocs_render_batch(SMARTDOCS_ENCOUNTER_MODEL);
  $batch_immunization = custom_get_smartdocs_render_batch(SMARTDOCS_IMMUNIZATION_MODEL);
  $batch_medicationadministration = custom_get_smartdocs_render_batch(SMARTDOCS_MEDICATIONADMINISTRATION_MODEL);
  $batch_medicationdispense = custom_get_smartdocs_render_batch(SMARTDOCS_MEDICATIONDISPENSE_MODEL);
  $batch_medicationorder = custom_get_smartdocs_render_batch(SMARTDOCS_MEDICATIONORDER_MODEL);
  $batch_medicationstatement = custom_get_smartdocs_render_batch(SMARTDOCS_MEDICATIONSTATEMENT_MODEL);
  $batch_observation = custom_get_smartdocs_render_batch(SMARTDOCS_OBSERVATION_MODEL);
  $batch_practitioner = custom_get_smartdocs_render_batch(SMARTDOCS_PRACTIOTIONER_MODEL);
  $batch_procedure = custom_get_smartdocs_render_batch(SMARTDOCS_PROCEDURE_MODEL);
  $batch_basePath = custom_get_smartdocs_render_batch(SMARTDOCS_BASEPATH_MODEL);
  $batch_schedule = custom_get_smartdocs_render_batch(SMARTDOCS_SCHEDULE_MODEL);
  
  
  $operations = array();
  /*if ($batch_weather != NULL) {
    $operations = array_merge($operations, $batch_weather['operations']);
  }
  if ($batch_pet != NULL) {
    $operations = array_merge($operations, $batch_pet['operations']);
  }*/
  if ($batch_oauth != NULL) {
    $operations = array_merge($operations, $batch_oauth['operations']);
  }
  if ($batch_patient != NULL) {
    $operations = array_merge($operations, $batch_patient['operations']);
  }
  if ($batch_allergyintolerance != NULL) {
    $operations = array_merge($operations, $batch_allergyintolerance['operations']);
  }
  if ($batch_carePlan != NULL) {
    $operations = array_merge($operations, $batch_carePlan['operations']);
  }
  if ($batch_condition != NULL) {
    $operations = array_merge($operations, $batch_condition['operations']);
  }
  if ($batch_coverage != NULL) {
    $operations = array_merge($operations, $batch_coverage['operations']);
  }
  if ($batch_diagnosticorder != NULL) {
    $operations = array_merge($operations, $batch_diagnosticorder['operations']);
  }
  if ($batch_diagnosticreport != NULL) {
    $operations = array_merge($operations, $batch_diagnosticreport['operations']);
  }
  if ($batch_documentreference != NULL) {
    $operations = array_merge($operations, $batch_documentreference['operations']);
  }
  if ($batch_encounter != NULL) {
    $operations = array_merge($operations, $batch_encounter['operations']);
  }
  if ($batch_immunization != NULL) {
    $operations = array_merge($operations, $batch_immunization['operations']);
  }
  if ($batch_medicationadministration != NULL) {
    $operations = array_merge($operations, $batch_medicationadministration['operations']);
  }
  if ($batch_medicationdispense != NULL) {
    $operations = array_merge($operations, $batch_medicationdispense['operations']);
  }
  if ($batch_medicationorder != NULL) {
    $operations = array_merge($operations, $batch_medicationorder['operations']);
  }
  if ($batch_medicationstatement != NULL) {
    $operations = array_merge($operations, $batch_medicationstatement['operations']);
  }
  if ($batch_observation != NULL) {
    $operations = array_merge($operations, $batch_observation['operations']);
  }
  if ($batch_practitioner != NULL) {
    $operations = array_merge($operations, $batch_practitioner['operations']);
  }
  if ($batch_procedure != NULL) {
    $operations = array_merge($operations, $batch_procedure['operations']);
  }
  if ($batch_basePath != NULL) {
    $operations = array_merge($operations, $batch_basePath['operations']);
  }
  if ($batch_schedule != NULL) {
    $operations = array_merge($operations, $batch_schedule['operations']);
  }
 // Get batches to render model nodes complete. #############################################################
  // Merge batches to return.
  $batch = array(
    'operations' => $operations,
    'title' => t('Rendering and Publishing SmartDocs documentation pages'),
    'init_message' => t('SmartDocs rendering has started...'),
    'progress_message' => t('Processed @current out of @total.'),
    'error_message' => t('Rendering SmartDocs nodes has encountered an error.'),
     'file' => drupal_get_path('module', 'smartdocs') . '/batch/smartdocs.render.inc',
  );

  batch_set($batch);
  batch_process('node/1');
  return $batch;
}


/**
 * Get batch for rendering all nodes for a model.
 *
 * @return array
 *   The batch for Drupal batch API.
 */
function custom_get_smartdocs_render_batch($model_machine_name) {
 try {
    $model = new Apigee\SmartDocs\Model(devconnect_default_org_config());
    $model->load($model_machine_name);
    $revision = new Apigee\SmartDocs\Revision($model->getConfig(), $model->getUuid());
    $rev = max($model->getLatestRevisionNumber(), 1);
    $revision->load($rev);
  }
  catch (Apigee\Exceptions\ResponseException $e) {
    $message = $e->getResponse();
    $message_object = @json_decode($message, TRUE);
    if (is_array($message_object) && array_key_exists('message', $message_object)) {
      $err_msg = $message_object['message'];
    }
    else {
      $err_msg = $e->getMessage();
    }
    $msg_args = array('%model' => $model_machine_name, '!error_message' => $err_msg);
    drupal_set_message(t('Error rendering SmartDocs methods for %model: !error_message', $msg_args), 'error');
    watchdog('apigee', 'Error rendering SmartDocs methods for %model: !error_message', $msg_args, WATCHDOG_ERROR);
    return NULL;
  }
  catch (Exception $e) {
    $msg_args = array('%model' => $model_machine_name, '!error_message' => $e->getMessage());
    drupal_set_message(t('Error rendering SmartDocs methods for %model: !error_message', $msg_args), 'error');
    watchdog('apigee', 'Error rendering SmartDocs methods for %model: !error_message', $msg_args, WATCHDOG_ERROR);
    return NULL;
  }

  $selected = array();
  foreach ($revision->getResources() as $resource) {
    foreach ($resource->getMethods() as $method) {
      $selected[$method->getUuid()] = $method->getUuid();
    }
  }
  $batch = smartdocs_render($model, $revision, $selected, array('publish' => 'publish'), TRUE);
  
  return $batch;
}

/**
 * Boosts PHP's memory and execution time for large-capacity batch processes.
 */
function _custom_apigee_manage_memory() {
  ini_set('memory_limit', '2048M');
  ini_set('max_execution_time', 6000);
}